// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique @db.VarChar(255)
  password String
  pets      Pet[]
  calendarEvents Calendar[] 　@relation("PetCalendar")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pet {
  id          Int             @id @default(autoincrement())
  name        String
  petType     PetType
  breed       String?
  gender      Gender
  birthday    String
  image       Bytes?
  userId      Int
  owner       User            @relation(fields: [userId], references: [id])
  weight      Weight[]        @relation("PetWeights")
  medicalRecords MedicalRecord[]  @relation("PetMedicalRecord")
  calendarEvents Calendar[]   @relation("PetCalendar")
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Weight {
  id     Int      @id @default(autoincrement())
  date   String
  notes  String?
  weight  Float
  petId  Int
  pet    Pet      @relation("PetWeights", fields: [petId], references: [id]) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MedicalRecord {
  id       Int      @id @default(autoincrement())
  date     String
  title    String
  notes    String?
  vetName String?
  petId    Int
  pet      Pet      @relation("PetMedicalRecord", fields: [petId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Calendar {
  id          Int      @id @default(autoincrement())
  event       Event
  description String?
  date        String
  startTime   String?
  endTime     String?
  userId      Int
  user        User      @relation("PetCalendar",　fields: [userId], references: [id])
  petId       Int?
  pet         Pet?      @relation("PetCalendar", fields: [petId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum PetType {
  DOG
  CAT
}

enum Gender {
  MALE
  FEMALE
  UNKNOWN
}

enum Event {
  WALKING
  VETERINARY
  GROOMING
  OTHER
}